# import upper, rest, cacheControl from './directive.gql'

type Query {
  hero(name: String): Hero
  episode: Episode
  search: [SearchResult!]!
  characters: Character
  books: [Book!]!
  hello: String @upper
  people: String @rest(url: "http://localhost:2021/movies/") @cacheControl(maxAge: 180)
  movie(id: Int): Movie! @cacheControl(maxAge: 180)
  mostViewedMovies: [Movie!]!
}

type Mutation {
  create(ri: ReviewInput): View
  createPost(author: String, comment: String): Post
}

type Subscription {
  postCreated: Post
}

type Post {
  author: String
  comment: String
}

type Movie {
  message: String
  name: String
}

type Author {
  name: String!
}

type Course {
  name: String!
}

interface Book {
  title: String!
  author: Author!
}

type Textbook implements Book {
  title: String!
  author: Author!
  courses: [Course!]!
}

type ColoringBook implements Book {
  title: String!
  author: Author!
  colors: [String!]!
}

type Hero {
  name: String
  friends: [Hero]
}

enum Episode {
  NEWHOPE
  EMPIRE
  JEDI
}

interface Character {
  id: ID!
  name: String!
}

type Human implements Character {
  id: ID!
  name: String!
  totalCredits: Int
}
 
type Droid implements Character {
  id: ID!
  name: String!
  primaryFunction: String
}

union SearchResult = Human | Droid

input ReviewInput {
  stars: Int!
  commentary: String
}

type View {
  stars: Int
}
